eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

spring:
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
 datasource:
   driverClassName: org.postgresql.Driver
   url: jdbc:postgresql://localhost:5432/Prod
   username: postgres
   password: root
  kafka:
    bootstrap-servers: "localhost:9092"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

resilience4j:
  circuitbreaker:
    instances:
      kafkaCircuitBreaker:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 30
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
  retry:
    instances:
      kafkaRetry:
        maxAttempts: 3
        waitDuration: 2s

user: 
  event:
    topic:
      name: userEventTopic
kafka:
 topic:
   fallback: userFallbackTopic
